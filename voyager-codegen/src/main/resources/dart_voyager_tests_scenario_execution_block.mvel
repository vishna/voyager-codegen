final @{type()}Scenarios = testScenarios.@{type()}Scenarios();
if (forceTests) {
  assert(@{type()}Scenarios != null, "@{type()}Scenarios seems to lack implementation");
  assert(@{type()}Scenarios.isNotEmpty, "@{type()}Scenarios must return at least one test scenario");
}
@{type()}Scenarios?.asMap()?.forEach((index, scenario) {
  _testVoyagerWidget<T>("@{type()} scenario $index: path=@{'$'}{scenario.path()} @{'$'}{scenario.testDescription}", router,
      testScenarios.defaultWrapper, testScenarios, scenario);
});